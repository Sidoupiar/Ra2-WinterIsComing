; *********************************** 初始化脚本的数据包 ***********************************

; 单位对战召唤机的初始化脚本的数据包 , A 方 (萌菌)
[DouQQUnit_A]
##VersionIS.DouQQ=yes
IDCode=1001
; 向对方基地移动一段距离
WIC.Data.OffsetRange.0.Max=12            ; 偏移距离最大值 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Min=12            ; 类似 Max , 只不过是偏移距离最小值 , 只有 Random=yes 的时候 , 最小值才有用 ; 如果比 Max 大 , 则实际运算中会取 Max 的值来计算 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Random=no         ; 若为 yes , 则会从 [原点] 到偏移最大值之间形成区间 , 取区间中的随机一个格子创建单位 ; 否则只会在最大值处创建单位
WIC.Data.OffsetRange.0.Self=no           ; 若为 yes , 则会从 [原点] 开始偏移 ; 否则从目标点开始偏移
WIC.Data.OffsetRange.1.Max=0             ; 距离目标点多少距离算完成动作 , 0 就是站在那个格子上 , 如果格子被阻挡则动作会被卡住 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.Timer.0.Step=30                 ; 如果没有找到目标的话 , 会在这么长时间后重新尝试 , 值不能小于 10 , 单位 : 帧
WIC.Data.Timer.0.Loop=1                  ; 尝试的次数 , 0 = 完全不尝试 , 立刻开始下一个动作 , 小于 0 则按 0 处理
WIC.Data.Timer.0.GetNew=yes              ; 重新尝试时 , 是依旧使用最开始选择的目标单位 , 还是重新随机选择 ; 即此项为 yes 的话 , 只有第一次选择目标单位的时候才会从 TechnoList.1 和 TechnoList.2 中随机 , 之后就不再随机了
WIC.Data.Timer.1.Step=30                 ; 当第一个单位到达后 , 最多等待多久 , 超时后将结束动作 , 默认值为 30 , 单位 : 帧
WIC.Data.TechnoList.1=NACNST             ; 偏移目标单位列表 , 从此列表中选择一个符合 NumberList.2 对应项的单位读取坐标信息 , 作为 [目标点] ; 如果没有取到正确的坐标 , 则使用 [原点] 的坐标
WIC.Data.NumberList.1=1                  ; 设置 TechnoList.1 中每个单位的随机权重 , 长度要和 TechnoList.1 匹配 , 浮点数 , 总和占比算法 , 默认权重为 1 , 小于 0 则按 0 处理
WIC.Data.NumberList.2=20                 ; 设置 TechnoList.1 中每个单位的偏移目标参数 , 长度要和 TechnoList.1 匹配 , 可用值 :
                                         ; 0 = 无目标 (默认值 , 无效值也默认此项) , 1 = 全随机
                                         ; 10 = 己方最近 , 11 = 己方最远 , 12 = 己方随机
                                         ; 20 = 敌方最近 , 21 = 敌方最远 , 22 = 敌方随机
                                         ; 30 = 中立最近 , 31 = 中立最远 , 32 = 中立随机

; 单位对战召唤机的初始化脚本的数据包 , A 方 (萌菌)
[DouQQUnit_AR]
##VersionIS.DouQQ=yes
IDCode=1002
; 向己方基地移动一段距离
WIC.Data.OffsetRange.0.Max=11            ; 偏移距离最大值 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Min=11            ; 类似 Max , 只不过是偏移距离最小值 , 只有 Random=yes 的时候 , 最小值才有用 ; 如果比 Max 大 , 则实际运算中会取 Max 的值来计算 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Random=no         ; 若为 yes , 则会从 [原点] 到偏移最大值之间形成区间 , 取区间中的随机一个格子创建单位 ; 否则只会在最大值处创建单位
WIC.Data.OffsetRange.0.Self=no           ; 若为 yes , 则会从 [原点] 开始偏移 ; 否则从目标点开始偏移
WIC.Data.OffsetRange.1.Max=0             ; 距离目标点多少距离算完成动作 , 0 就是站在那个格子上 , 如果格子被阻挡则动作会被卡住 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.Timer.0.Step=30                 ; 如果没有找到目标的话 , 会在这么长时间后重新尝试 , 值不能小于 10 , 单位 : 帧
WIC.Data.Timer.0.Loop=1                  ; 尝试的次数 , 0 = 完全不尝试 , 立刻开始下一个动作 , 小于 0 则按 0 处理
WIC.Data.Timer.0.GetNew=yes              ; 重新尝试时 , 是依旧使用最开始选择的目标单位 , 还是重新随机选择 ; 即此项为 yes 的话 , 只有第一次选择目标单位的时候才会从 TechnoList.1 和 TechnoList.2 中随机 , 之后就不再随机了
WIC.Data.Timer.1.Step=30                 ; 当第一个单位到达后 , 最多等待多久 , 超时后将结束动作 , 默认值为 30 , 单位 : 帧
WIC.Data.TechnoList.1=GACNST             ; 偏移目标单位列表 , 从此列表中选择一个符合 NumberList.2 对应项的单位读取坐标信息 , 作为 [目标点] ; 如果没有取到正确的坐标 , 则使用 [原点] 的坐标
WIC.Data.NumberList.1=1                  ; 设置 TechnoList.1 中每个单位的随机权重 , 长度要和 TechnoList.1 匹配 , 浮点数 , 总和占比算法 , 默认权重为 1 , 小于 0 则按 0 处理
WIC.Data.NumberList.2=10                 ; 设置 TechnoList.1 中每个单位的偏移目标参数 , 长度要和 TechnoList.1 匹配 , 可用值 :
                                         ; 0 = 无目标 (默认值 , 无效值也默认此项) , 1 = 全随机
                                         ; 10 = 己方最近 , 11 = 己方最远 , 12 = 己方随机
                                         ; 20 = 敌方最近 , 21 = 敌方最远 , 22 = 敌方随机
                                         ; 30 = 中立最近 , 31 = 中立最远 , 32 = 中立随机

; 单位对战召唤机的初始化脚本的数据包 , A 方 (萌菌) , 等待
[DouQQUnit_AW]
##VersionIS.DouQQ=yes
IDCode=1003
; 脚本列表和随机权重
WIC.Data.TechnoList.0=DouQQUnit_Can
WIC.Data.NumberList.0=0                  ; 数量
WIC.Data.NumberList.1=2                  ; 单位的归属方 , 1 = 己方 , 2 = 敌方 , 3 = 中立
WIC.Data.NumberList.2=1                  ; 判断的条件 , 0 = 等于 , 1 = 大于 , 2 = 大于等于 , 3 = 小于 , 4 = 小于等于 , 5 = 不等于
WIC.Data.NumberList.3=1
WIC.Data.ScriptList=DouQQUnit_SC_AR
WIC.Data.Timer.0.Step=600                ; 最大等待时间 , 单位 : 帧

; 单位对战召唤机的初始化脚本的数据包 , B 方 (酥菌)
[DouQQUnit_B]
##VersionIS.DouQQ=yes
IDCode=1011
; 向对方基地移动一段距离
WIC.Data.OffsetRange.0.Max=14            ; 偏移距离最大值 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Min=14            ; 类似 Max , 只不过是偏移距离最小值 , 只有 Random=yes 的时候 , 最小值才有用 ; 如果比 Max 大 , 则实际运算中会取 Max 的值来计算 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Random=no         ; 若为 yes , 则会从 [原点] 到偏移最大值之间形成区间 , 取区间中的随机一个格子创建单位 ; 否则只会在最大值处创建单位
WIC.Data.OffsetRange.0.Self=no           ; 若为 yes , 则会从 [原点] 开始偏移 ; 否则从目标点开始偏移
WIC.Data.OffsetRange.1.Max=0             ; 距离目标点多少距离算完成动作 , 0 就是站在那个格子上 , 如果格子被阻挡则动作会被卡住 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.Timer.0.Step=30                 ; 如果没有找到目标的话 , 会在这么长时间后重新尝试 , 值不能小于 10 , 单位 : 帧
WIC.Data.Timer.0.Loop=1                  ; 尝试的次数 , 0 = 完全不尝试 , 立刻开始下一个动作 , 小于 0 则按 0 处理
WIC.Data.Timer.0.GetNew=yes              ; 重新尝试时 , 是依旧使用最开始选择的目标单位 , 还是重新随机选择 ; 即此项为 yes 的话 , 只有第一次选择目标单位的时候才会从 TechnoList.1 和 TechnoList.2 中随机 , 之后就不再随机了
WIC.Data.Timer.1.Step=30                 ; 当第一个单位到达后 , 最多等待多久 , 超时后将结束动作 , 默认值为 30 , 单位 : 帧
WIC.Data.TechnoList.1=GACNST             ; 偏移目标单位列表 , 从此列表中选择一个符合 NumberList.2 对应项的单位读取坐标信息 , 作为 [目标点] ; 如果没有取到正确的坐标 , 则使用 [原点] 的坐标
WIC.Data.NumberList.1=1                  ; 设置 TechnoList.1 中每个单位的随机权重 , 长度要和 TechnoList.1 匹配 , 浮点数 , 总和占比算法 , 默认权重为 1 , 小于 0 则按 0 处理
WIC.Data.NumberList.2=20                 ; 设置 TechnoList.1 中每个单位的偏移目标参数 , 长度要和 TechnoList.1 匹配 , 可用值 :
                                         ; 0 = 无目标 (默认值 , 无效值也默认此项) , 1 = 全随机
                                         ; 10 = 己方最近 , 11 = 己方最远 , 12 = 己方随机
                                         ; 20 = 敌方最近 , 21 = 敌方最远 , 22 = 敌方随机
                                         ; 30 = 中立最近 , 31 = 中立最远 , 32 = 中立随机

; 单位对战召唤机的初始化脚本的数据包 , B 方 (酥菌)
[DouQQUnit_BR]
##VersionIS.DouQQ=yes
IDCode=1012
; 向己方基地移动一段距离
WIC.Data.OffsetRange.0.Max=8             ; 偏移距离最大值 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Min=8             ; 类似 Max , 只不过是偏移距离最小值 , 只有 Random=yes 的时候 , 最小值才有用 ; 如果比 Max 大 , 则实际运算中会取 Max 的值来计算 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Random=no         ; 若为 yes , 则会从 [原点] 到偏移最大值之间形成区间 , 取区间中的随机一个格子创建单位 ; 否则只会在最大值处创建单位
WIC.Data.OffsetRange.0.Self=no           ; 若为 yes , 则会从 [原点] 开始偏移 ; 否则从目标点开始偏移
WIC.Data.OffsetRange.1.Max=0             ; 距离目标点多少距离算完成动作 , 0 就是站在那个格子上 , 如果格子被阻挡则动作会被卡住 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.Timer.0.Step=30                 ; 如果没有找到目标的话 , 会在这么长时间后重新尝试 , 值不能小于 10 , 单位 : 帧
WIC.Data.Timer.0.Loop=1                  ; 尝试的次数 , 0 = 完全不尝试 , 立刻开始下一个动作 , 小于 0 则按 0 处理
WIC.Data.Timer.0.GetNew=yes              ; 重新尝试时 , 是依旧使用最开始选择的目标单位 , 还是重新随机选择 ; 即此项为 yes 的话 , 只有第一次选择目标单位的时候才会从 TechnoList.1 和 TechnoList.2 中随机 , 之后就不再随机了
WIC.Data.Timer.1.Step=30                 ; 当第一个单位到达后 , 最多等待多久 , 超时后将结束动作 , 默认值为 30 , 单位 : 帧
WIC.Data.TechnoList.1=NACNST             ; 偏移目标单位列表 , 从此列表中选择一个符合 NumberList.2 对应项的单位读取坐标信息 , 作为 [目标点] ; 如果没有取到正确的坐标 , 则使用 [原点] 的坐标
WIC.Data.NumberList.1=1                  ; 设置 TechnoList.1 中每个单位的随机权重 , 长度要和 TechnoList.1 匹配 , 浮点数 , 总和占比算法 , 默认权重为 1 , 小于 0 则按 0 处理
WIC.Data.NumberList.2=10                 ; 设置 TechnoList.1 中每个单位的偏移目标参数 , 长度要和 TechnoList.1 匹配 , 可用值 :
                                         ; 0 = 无目标 (默认值 , 无效值也默认此项) , 1 = 全随机
                                         ; 10 = 己方最近 , 11 = 己方最远 , 12 = 己方随机
                                         ; 20 = 敌方最近 , 21 = 敌方最远 , 22 = 敌方随机
                                         ; 30 = 中立最近 , 31 = 中立最远 , 32 = 中立随机

; 单位对战召唤机的初始化脚本的数据包 , B 方 (酥菌) , 等待
[DouQQUnit_BW]
##VersionIS.DouQQ=yes
IDCode=1013
; 脚本列表和随机权重
WIC.Data.TechnoList.0=DouQQUnit_Can
WIC.Data.NumberList.0=0                  ; 数量
WIC.Data.NumberList.1=2                  ; 单位的归属方 , 1 = 己方 , 2 = 敌方 , 3 = 中立
WIC.Data.NumberList.2=1                  ; 判断的条件 , 0 = 等于 , 1 = 大于 , 2 = 大于等于 , 3 = 小于 , 4 = 小于等于 , 5 = 不等于
WIC.Data.NumberList.3=1
WIC.Data.ScriptList=DouQQUnit_SC_BR
WIC.Data.Timer.0.Step=600                ; 最大等待时间 , 单位 : 帧

; *********************************** 数据包模板 ***********************************

; 投放单位数据包的模板
[DouQQUnit_Template]
##VersionIS.DouQQ=yes
##CopyTemplate=yes
WIC.Data.TeamList=DouQQTeam
WIC.Data.ScriptList=DouQQUnit_AttackSC
WIC.Data.HasMission=yes
WIC.Data.MissionList=
WIC.Data.CreateCount=1                        ; 创建的单位数量 , 也就是可以一口气创建很多单位 ; 小于 0 则按 0 处理
WIC.Data.CreateCount.UseVar=0
WIC.Data.CreateCount.Same=yes
WIC.Data.SingleTeam=yes                       ; 若为 yes , 则创建的单位都加入同一个 AI 作战小队 , 此时忽略 SelectAll.Team 和 SelectAll.Script ; 否则每个单位都拥有一个独立的小队
WIC.Data.SelectAll.Team=yes                   ; 若为 yes , 则每个单位都可以随机选取整个列表的小队 , 此时忽略 SelectAll.Team.Count ; 否则只能选取与自己位置对应的小队 , 此时 TeamList 的长度要和 TechnoList.0 匹配
WIC.Data.SelectAll.Team.Count=1               ; 每个单位对应几个小队 , 填 2 则 TeamList 的长度需要为 TechnoList.0 的 2 倍 ; 若 TeamList 列表不够长 , 则缺少的部分算没定义 ; 小于 1 则按 1 处理
WIC.Data.SelectAll.Script=yes                 ; 类似 SelectAll.Team , 只不过影响的是 Script 相关项
WIC.Data.SelectAll.Script.Count=1             ; 类似 SelectAll.Team.Count , 只不过影响的是 Script 相关项
WIC.Data.SelectAll.Mission=yes                ; 类似 SelectAll.Team , 只不过影响的是 Mission 相关项
WIC.Data.SelectAll.Mission.Count=1            ; 类似 SelectAll.Team.Count , 只不过影响的是 Mission 相关项
WIC.Data.OffsetRange.0.Max=0                  ; 偏移距离最大值 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Min=0                  ; 类似 Max , 只不过是偏移距离最小值 , 只有 Random=yes 的时候 , 最小值才有用 ; 如果比 Max 大 , 则实际运算中会取 Max 的值来计算 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Random=yes             ; 若为 yes , 则会从 [原点] 到偏移最大值之间形成区间 , 取区间中的随机一个格子创建单位 ; 否则只会在最大值处创建单位
WIC.Data.OffsetRange.0.Self=yes               ; 若为 yes , 则会从 [原点] 开始偏移 ; 否则从目标点开始偏移

; 等待条件跳转的模板 , A 部分
[DouQQUnit_TemplateCheckA]
##VersionIS.DouQQ=yes
##CopyTemplate=yes
WIC.Data.NumberList.0=1,1,1              ; 数量
WIC.Data.NumberList.1=1,1,1              ; 单位的归属方 , 1 = 己方 , 2 = 敌方 , 3 = 中立
WIC.Data.NumberList.2=3,3,3              ; 判断的条件 , 0 = 等于 , 1 = 大于 , 2 = 大于等于 , 3 = 小于 , 4 = 小于等于 , 5 = 不等于
WIC.Data.NumberList.3=1
WIC.Data.Timer.0.Step=6000               ; 最大等待时间 , 单位 : 帧

; 等待条件跳转的模板 , B 部分
[DouQQUnit_TemplateCheckB]
##VersionIS.DouQQ=yes
##CopyTemplate=yes
WIC.Data.NumberList.0=1                  ; 数量
WIC.Data.NumberList.1=1                  ; 单位的归属方 , 1 = 己方 , 2 = 敌方 , 3 = 中立
WIC.Data.NumberList.2=3                  ; 判断的条件 , 0 = 等于 , 1 = 大于 , 2 = 大于等于 , 3 = 小于 , 4 = 小于等于 , 5 = 不等于
WIC.Data.NumberList.3=1
WIC.Data.Timer.0.Step=6000               ; 最大等待时间 , 单位 : 帧

; 召唤 [报幕器] 的模板
[DouQQUnit_TemplateTEXT]
##VersionIS.DouQQ=yes
##CopyTemplate=yes
##Copy=DouQQUnit_Template
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=1
WIC.Data.OffsetRange.0.Max=13                 ; 偏移距离最大值 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Min=13                 ; 类似 Max , 只不过是偏移距离最小值 , 只有 Random=yes 的时候 , 最小值才有用 ; 如果比 Max 大 , 则实际运算中会取 Max 的值来计算 ; 小于 0 则按 0 处理 , 整数 , 单位 : 格子
WIC.Data.OffsetRange.0.Random=no              ; 若为 yes , 则会从 [原点] 到偏移最大值之间形成区间 , 取区间中的随机一个格子创建单位 ; 否则只会在最大值处创建单位
WIC.Data.OffsetRange.0.Self=yes               ; 若为 yes , 则会从 [原点] 开始偏移 ; 否则从目标点开始偏移
WIC.Data.TechnoList.1=DouQQUnit               ; 偏移目标单位列表 , 从此列表中选择一个符合 NumberList.2 对应项的单位读取坐标信息 , 作为 [目标点] ; 如果没有取到正确的坐标 , 则使用 [原点] 的坐标
WIC.Data.NumberList.1=1                       ; 每种偏移目标单位的权重
WIC.Data.NumberList.2=20                      ; 每种偏移目标单位的偏移目标参数 , 长度要和 TechnoList.1 匹配 , 可用值 :
                                              ; 0 = 无目标 (默认值 , 无效值也默认此项) , 1 = 全随机
                                              ; 10 = 己方最近 , 11 = 己方最远 , 12 = 己方随机
                                              ; 20 = 敌方最近 , 21 = 敌方最远 , 22 = 敌方随机
                                              ; 30 = 中立最近 , 31 = 中立最远 , 32 = 中立随机

; *********************************** A 部分脚本的数据包 ***********************************

; A 部分 , 步骤 01
[DouQQUnit_A01]
##VersionIS.DouQQ=yes
IDCode=1101
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A01
WIC.Data.NumberList.0=1

; A 部分 , 步骤 02
[DouQQUnit_A02]
##VersionIS.DouQQ=yes
IDCode=1102
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A02
WIC.Data.NumberList.0=1

; A 部分 , 步骤 03
[DouQQUnit_A03]
##VersionIS.DouQQ=yes
IDCode=1103
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A03
WIC.Data.NumberList.0=1

; A 部分 , 步骤 04
[DouQQUnit_A04]
##VersionIS.DouQQ=yes
IDCode=1104
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A04
WIC.Data.NumberList.0=1

; A 部分 , 步骤 05
[DouQQUnit_A05]
##VersionIS.DouQQ=yes
IDCode=1105
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A05
WIC.Data.NumberList.0=1

; A 部分 , 步骤 06
[DouQQUnit_A06]
##VersionIS.DouQQ=yes
IDCode=1106
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A06
WIC.Data.NumberList.0=1

; A 部分 , 步骤 07
[DouQQUnit_A07]
##VersionIS.DouQQ=yes
IDCode=1107
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A07
WIC.Data.NumberList.0=1

; A 部分 , 步骤 08
[DouQQUnit_A08]
##VersionIS.DouQQ=yes
IDCode=1108
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A08
WIC.Data.NumberList.0=1

; A 部分 , 步骤 09
[DouQQUnit_A09]
##VersionIS.DouQQ=yes
IDCode=1109
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_A09
WIC.Data.NumberList.0=1

; A 部分 , 步骤 01 , 召唤第 01 波
[DouQQUnit_A01_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1111
; 100 个 0 级美国大兵 , 动员兵 , 尤里新兵
WIC.Data.TechnoList.0=E1,E2,INIT
WIC.Data.NumberList.0=1,1,1
WIC.Data.CreateCount=100

; A 部分 , 步骤 02 , 召唤第 01 波
[DouQQUnit_A02_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1112
; 100 个 1 级美国大兵 , 动员兵 , 尤里新兵
WIC.Data.TechnoList.0=E1_1,E2_1,INIT_1
WIC.Data.NumberList.0=1,1,1
WIC.Data.CreateCount=100

; A 部分 , 步骤 03 , 召唤第 01 波
[DouQQUnit_A03_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1113
; 100 个 2 级美国大兵 , 动员兵 , 尤里新兵
WIC.Data.TechnoList.0=E1_2,E2_2,INIT_2
WIC.Data.NumberList.0=1,1,1
WIC.Data.CreateCount=100

; A 部分 , 步骤 04 , 召唤第 01 波
[DouQQUnit_A04_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1114
; 100 个 3 级美国大兵 , 动员兵 , 尤里新兵
WIC.Data.TechnoList.0=E1_3,E2_3,INIT_3
WIC.Data.NumberList.0=1,1,1
WIC.Data.CreateCount=100

; A 部分 , 步骤 05 , 召唤第 01 波
[DouQQUnit_A05_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1115
; 100 个 4 级美国大兵 , 动员兵 , 尤里新兵
WIC.Data.TechnoList.0=E1_4,E2_4,INIT_4
WIC.Data.NumberList.0=1,1,1
WIC.Data.CreateCount=100

; A 部分 , 步骤 06 , 召唤第 01 波
[DouQQUnit_A06_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1116
; 100 个 5 级美国大兵 , 动员兵 , 尤里新兵
WIC.Data.TechnoList.0=E1_5,E2_5,INIT_5
WIC.Data.NumberList.0=1,1,1
WIC.Data.CreateCount=100

; A 部分 , 步骤 07 , 召唤第 01 波
[DouQQUnit_A07_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1117
; 100 个 6 级美国大兵 , 动员兵 , 尤里新兵
WIC.Data.TechnoList.0=E1_6,E2_6,INIT_6
WIC.Data.NumberList.0=1,1,1
WIC.Data.CreateCount=100

; A 部分 , 步骤 08 , 召唤第 01 波
[DouQQUnit_A08_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1118
; 100 个 7 级美国大兵 , 动员兵 , 尤里新兵
WIC.Data.TechnoList.0=E1_7,E2_7,INIT_7
WIC.Data.NumberList.0=1,1,1
WIC.Data.CreateCount=100

; A 部分 , 步骤 01 , 等待条件跳转 01
[DouQQUnit_A01C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckA
IDCode=1121
; 判断 0 级美国大兵 , 动员兵 , 尤里新兵的数量
WIC.Data.TechnoList.0=E1,E2,INIT
WIC.Data.ScriptList=DouQQUnit_SC_A02

; A 部分 , 步骤 02 , 等待条件跳转 01
[DouQQUnit_A02C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckA
IDCode=1122
; 判断 1 级美国大兵 , 动员兵 , 尤里新兵的数量
WIC.Data.TechnoList.0=E1_1,E2_1,INIT_1
WIC.Data.ScriptList=DouQQUnit_SC_A03

; A 部分 , 步骤 03 , 等待条件跳转 01
[DouQQUnit_A03C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckA
IDCode=1123
; 判断 2 级美国大兵 , 动员兵 , 尤里新兵的数量
WIC.Data.TechnoList.0=E1_2,E2_2,INIT_2
WIC.Data.ScriptList=DouQQUnit_SC_A04

; A 部分 , 步骤 04 , 等待条件跳转 01
[DouQQUnit_A04C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckA
IDCode=1124
; 判断 3 级美国大兵 , 动员兵 , 尤里新兵的数量
WIC.Data.TechnoList.0=E1_3,E2_3,INIT_3
WIC.Data.ScriptList=DouQQUnit_SC_A05

; A 部分 , 步骤 05 , 等待条件跳转 01
[DouQQUnit_A05C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckA
IDCode=1125
; 判断 4 级美国大兵 , 动员兵 , 尤里新兵的数量
WIC.Data.TechnoList.0=E1_4,E2_4,INIT_4
WIC.Data.ScriptList=DouQQUnit_SC_A06

; A 部分 , 步骤 06 , 等待条件跳转 01
[DouQQUnit_A06C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckA
IDCode=1126
; 判断 5 级美国大兵 , 动员兵 , 尤里新兵的数量
WIC.Data.TechnoList.0=E1_5,E2_5,INIT_5
WIC.Data.ScriptList=DouQQUnit_SC_A07

; A 部分 , 步骤 07 , 等待条件跳转 01
[DouQQUnit_A07C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckA
IDCode=1127
; 判断 6 级美国大兵 , 动员兵 , 尤里新兵的数量
WIC.Data.TechnoList.0=E1_6,E2_6,INIT_6
WIC.Data.ScriptList=DouQQUnit_SC_A08

; A 部分 , 步骤 08 , 等待条件跳转 01
[DouQQUnit_A08C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckA
IDCode=1128
; 判断 7 级美国大兵 , 动员兵 , 尤里新兵的数量
WIC.Data.TechnoList.0=E1_7,E2_7,INIT_7
WIC.Data.ScriptList=DouQQUnit_SC_A09

; *********************************** B 部分脚本的数据包 ***********************************

; B 部分 , 步骤 01
[DouQQUnit_B01]
##VersionIS.DouQQ=yes
IDCode=1201
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B01
WIC.Data.NumberList.0=1

; B 部分 , 步骤 02
[DouQQUnit_B02]
##VersionIS.DouQQ=yes
IDCode=1202
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B02
WIC.Data.NumberList.0=1

; B 部分 , 步骤 03
[DouQQUnit_B03]
##VersionIS.DouQQ=yes
IDCode=1203
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B03
WIC.Data.NumberList.0=1

; B 部分 , 步骤 04
[DouQQUnit_B04]
##VersionIS.DouQQ=yes
IDCode=1204
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B04
WIC.Data.NumberList.0=1

; B 部分 , 步骤 05
[DouQQUnit_B05]
##VersionIS.DouQQ=yes
IDCode=1205
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B05
WIC.Data.NumberList.0=1

; B 部分 , 步骤 06
[DouQQUnit_B06]
##VersionIS.DouQQ=yes
IDCode=1206
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B06
WIC.Data.NumberList.0=1

; B 部分 , 步骤 07
[DouQQUnit_B07]
##VersionIS.DouQQ=yes
IDCode=1207
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B07
WIC.Data.NumberList.0=1

; B 部分 , 步骤 08
[DouQQUnit_B08]
##VersionIS.DouQQ=yes
IDCode=1208
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B08
WIC.Data.NumberList.0=1

; B 部分 , 步骤 09
[DouQQUnit_B09]
##VersionIS.DouQQ=yes
IDCode=1209
; 脚本列表和随机权重
WIC.Data.ScriptList=DouQQUnit_SC_B09
WIC.Data.NumberList.0=1

; B 部分 , 步骤 01 , 召唤第 01 波
[DouQQUnit_B01_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1211
; 20 个 0 级超越·脉冲炮塔
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=20

; B 部分 , 步骤 02 , 召唤第 01 波
[DouQQUnit_B02_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1212
; 20 个 0 级超越·脉冲炮塔
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=20

; B 部分 , 步骤 03 , 召唤第 01 波
[DouQQUnit_B03_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1213
; 20 个 0 级超越·脉冲炮塔
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=20

; B 部分 , 步骤 04 , 召唤第 01 波
[DouQQUnit_B04_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1214
; 20 个 0 级超越·脉冲炮塔
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=20

; B 部分 , 步骤 05 , 召唤第 01 波
[DouQQUnit_B05_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1215
; 20 个 0 级超越·脉冲炮塔
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=20

; B 部分 , 步骤 06 , 召唤第 01 波
[DouQQUnit_B06_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1216
; 20 个 0 级超越·脉冲炮塔
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=20

; B 部分 , 步骤 07 , 召唤第 01 波
[DouQQUnit_B07_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1217
; 20 个 0 级超越·脉冲炮塔
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=20

; B 部分 , 步骤 08 , 召唤第 01 波
[DouQQUnit_B08_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1218
; 20 个 0 级超越·脉冲炮塔
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=20

; B 部分 , 步骤 01 , 等待条件跳转 01
[DouQQUnit_B01C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckB
IDCode=1221
; 判断 0 级超越·脉冲炮塔的数量
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.ScriptList=DouQQUnit_SC_B02

; B 部分 , 步骤 02 , 等待条件跳转 01
[DouQQUnit_B02C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckB
IDCode=1222
; 判断 0 级超越·脉冲炮塔的数量
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.ScriptList=DouQQUnit_SC_B03

; B 部分 , 步骤 03 , 等待条件跳转 01
[DouQQUnit_B03C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckB
IDCode=1223
; 判断 0 级超越·脉冲炮塔的数量
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.ScriptList=DouQQUnit_SC_B04

; B 部分 , 步骤 04 , 等待条件跳转 01
[DouQQUnit_B04C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckB
IDCode=1224
; 判断 0 级超越·脉冲炮塔的数量
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.ScriptList=DouQQUnit_SC_B05

; B 部分 , 步骤 05 , 等待条件跳转 01
[DouQQUnit_B05C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckB
IDCode=1225
; 判断 0 级超越·脉冲炮塔的数量
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.ScriptList=DouQQUnit_SC_B06

; B 部分 , 步骤 06 , 等待条件跳转 01
[DouQQUnit_B06C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckB
IDCode=1226
; 判断 0 级超越·脉冲炮塔的数量
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.ScriptList=DouQQUnit_SC_B07

; B 部分 , 步骤 07 , 等待条件跳转 01
[DouQQUnit_B07C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckB
IDCode=1227
; 判断 0 级超越·脉冲炮塔的数量
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.ScriptList=DouQQUnit_SC_B08

; B 部分 , 步骤 08 , 等待条件跳转 01
[DouQQUnit_B08C_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateCheckB
IDCode=1228
; 判断 0 级超越·脉冲炮塔的数量
WIC.Data.TechnoList.0=AASIKZBACA
WIC.Data.ScriptList=DouQQUnit_SC_B09

; *********************************** 召唤工具人的数据包 ***********************************

; 召唤 [标识器]
[DouQQUnit_ICON]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_Template
IDCode=1301
; [标识器]
WIC.Data.TechnoList.0=DouQQUnit_Can
WIC.Data.NumberList.0=1
WIC.Data.CreateCount=1

; 召唤 [报幕器 01]
[DouQQUnit_TEXT_01]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateTEXT
IDCode=1311
; [报幕器 01]
WIC.Data.TechnoList.0=DouQQUnit_Put_01

; 召唤 [报幕器 02]
[DouQQUnit_TEXT_02]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateTEXT
IDCode=1312
; [报幕器 02]
WIC.Data.TechnoList.0=DouQQUnit_Put_02

; 召唤 [报幕器 03]
[DouQQUnit_TEXT_03]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateTEXT
IDCode=1313
; [报幕器 03]
WIC.Data.TechnoList.0=DouQQUnit_Put_03

; 召唤 [报幕器 04]
[DouQQUnit_TEXT_04]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateTEXT
IDCode=1314
; [报幕器 04]
WIC.Data.TechnoList.0=DouQQUnit_Put_04

; 召唤 [报幕器 05]
[DouQQUnit_TEXT_05]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateTEXT
IDCode=1315
; [报幕器 05]
WIC.Data.TechnoList.0=DouQQUnit_Put_05

; 召唤 [报幕器 06]
[DouQQUnit_TEXT_06]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateTEXT
IDCode=1316
; [报幕器 06]
WIC.Data.TechnoList.0=DouQQUnit_Put_06

; 召唤 [报幕器 07]
[DouQQUnit_TEXT_07]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateTEXT
IDCode=1317
; [报幕器 07]
WIC.Data.TechnoList.0=DouQQUnit_Put_07

; 召唤 [报幕器 08]
[DouQQUnit_TEXT_08]
##VersionIS.DouQQ=yes
##Copy=DouQQUnit_TemplateTEXT
IDCode=1318
; [报幕器 08]
WIC.Data.TechnoList.0=DouQQUnit_Put_08